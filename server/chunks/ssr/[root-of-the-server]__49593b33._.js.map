{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/SULMAN/Desktop/PERFUME%20WEBSITE/perfume/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/SULMAN/Desktop/PERFUME%20WEBSITE/perfume/src/ai/flows/search-products.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview Product search AI agent.\n *\n * - searchProducts - A function that handles product search and recommendation.\n * - SearchProductsInput - The input type for the searchProducts function.\n * - SearchProductsOutput - The return type for the searchProducts function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst SearchProductsInputSchema = z.object({\n  query: z\n    .string()\n    .describe('The user\\'s search query for a perfume.'),\n  productNames: z.array(z.string()).describe('A list of available perfume names in the store.'),\n});\nexport type SearchProductsInput = z.infer<typeof SearchProductsInputSchema>;\n\nconst SearchProductsOutputSchema = z.object({\n  recommendations: z.array(z.string()).describe('An array of up to 8 recommended perfume names that are most relevant to the user query.'),\n});\nexport type SearchProductsOutput = z.infer<typeof SearchProductsOutputSchema>;\n\nexport async function searchProducts(input: SearchProductsInput): Promise<SearchProductsOutput> {\n  return searchProductsFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'searchProductsPrompt',\n  input: {schema: SearchProductsInputSchema},\n  output: {schema: SearchProductsOutputSchema},\n  prompt: `You are a helpful e-commerce search assistant for a perfume store.\nYou will be given a user's search query and a list of all available perfume names.\nYour task is to identify the most relevant perfumes from the list based on the user's query.\nThe query might be a direct product name, or it could describe a mood, occasion, or scent preference (e.g., \"summer floral\", \"a scent for a night out\").\n\nReturn a list of up to 8 of the most relevant product names. Only return names that exist in the provided list.\n\nUser Query: {{{query}}}\n\nAvailable Perfumes:\n{{#each productNames}}\n- {{{this}}}\n{{/each}}\n`,\n});\n\nconst searchProductsFlow = ai.defineFlow(\n  {\n    name: 'searchProductsFlow',\n    inputSchema: SearchProductsInputSchema,\n    outputSchema: SearchProductsOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAGA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzC,OAAO,uIAAA,CAAA,IAAC,CACL,MAAM,GACN,QAAQ,CAAC;IACZ,cAAc,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;AAC7C;AAGA,MAAM,6BAA6B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1C,iBAAiB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;AAChD;AAGO,eAAe,eAAe,KAA0B;IAC7D,OAAO,mBAAmB;AAC5B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAyB;IACzC,QAAQ;QAAC,QAAQ;IAA0B;IAC3C,QAAQ,CAAC;;;;;;;;;;;;;AAaX,CAAC;AACD;AAEA,MAAM,qBAAqB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACtC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAjCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/SULMAN/Desktop/PERFUME%20WEBSITE/perfume/.next-internal/server/app/search/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {searchProducts as '40c586d01a32009b167db98147da14fc6029d42f70'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/SULMAN/Desktop/PERFUME%20WEBSITE/perfume/app/search/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/search/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/search/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAuR,GACpT,qDACA","debugId":null}},
    {"offset": {"line": 365, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/SULMAN/Desktop/PERFUME%20WEBSITE/perfume/app/search/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/search/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/search/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmQ,GAChS,iCACA","debugId":null}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}